What happens when you initialize a repository? Why do you need to do it?
	
	When aGit repository is initialized a hidden folder called .git is created and is used to store all of the files in the version control system.
	You need to do this to setup the Git system for use.

How is the staging area different from the working directory and the repository? What value do you think it offers?

	The staging area is a collection of files to be included in the next commit. Not all files
	in the working directory may be included in the commit. This way you can organize your commit in a logical manner.

How can you use the staging area to make sure you have one commit per logical change?
	You can add only the  files you want in a commit to the staging area. You can even use git diff to see the changes between the working
	directory and the staging area.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	Use branches to introduce a new feature or to use an expiremental version of the program.

How do the diagrams help you visualize the branch structure?

	The diagram allows you to see the parental view of each commit. It will also show you the flow of the branches and unreachable commits.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	Merging combines two branches into to one flow sorted by time stamp.

	

